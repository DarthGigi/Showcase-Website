---
import logo from "/assets/images/svg/logo.svg?url";
---

<nav id="navBar" class="opacity-0 -translate-y-full duration-700 transition-all ease-in-out top-0 left-0 w-full h-14 z-50 fixed bg-[rgba(15,15,15,0.9)] saturate-[180%] backdrop-blur-[10px] shadow-[0_1px_0_0_#ffffff3d]">
  <div class="w-full px-4 h-full flex flex-wrap justify-between items-center mx-auto max-w-screen-xl">
    <a id="logo" href="/" class="cursor-default flex items-center duration-700 opacity-0 ease-in-out">
      <img src={logo} class="mr-3 h-6 sm:h-8" alt="Sirius Logo" />
    </a>
    <div class="flex items-center lg:order-2 text-xs [line-height:1.33337] gap-4">
      <div id="link1" class="flex items-center gap-1 opacity-0 duration-700 ease-in-out">
        <a href="https://rayfield.dev/en/introduction" target="_blank" class="text-white hover:text-[#147ce5] font-light opacity-80 hover:opacity-100"> Rayfield</a>
      </div>
      <div id="link2" class="flex items-center gap-1 opacity-0 duration-700 ease-in-out">
        <a href="https://discord.gg/sirius" target="_blank" class="text-white hover:text-[#147ce5] font-light opacity-80 hover:opacity-100"> Discord</a>
      </div>

      <button id="button1" class="transition-all duration-500 opacity-0 cursor-pointer inline-block text-center whitespace-nowrap bg-[#0071e3] text-white border-0 outline-0 font-normal [letter-spacing:-0.01em] min-w-[23px] hover:bg-[#147ce5] px-[11px] py-1 rounded-xl">Buy</button>
    </div>
  </div>
  <div id="banner" class="w-full hidden opacity-0 transition-all ease-in-out duration-500">
    <div class="max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8">
      <div class="pr-16 text-center sm:px-16">
        <p id="bannerText" class="font-medium"></p>
      </div>
    </div>
  </div>
</nav>

<script>
  const banner = document.getElementById("banner");
  const bannerText = document.getElementById("bannerText");

  let bannerData;
  const getBannerData = async () => {
    const response = await fetch("https://raw.githubusercontent.com/shlexware/SiriusDependencies/main/banner.json");
    bannerData = await response.json();
    bannerText.innerHTML = bannerData.text;
    bannerText.style.color = bannerData.txtcolor;
    banner.style.backgroundColor = bannerData.bgcolor;
    if (bannerData.show === true) {
      banner.classList.remove("hidden");
    }
    // after 2 seconds, show banner
  };

  getBannerData();

  // intersection observer for navbar when it's fully visible on the screen, then remove the opacity classes

  const navBar = document.getElementById("navBar");
  const logo = document.getElementById("logo");
  const link1 = document.getElementById("link1");
  const link2 = document.getElementById("link2");
  const button1 = document.getElementById("button1");

  const options = {
    root: null,
    rootMargin: "1px",
    threshold: 1,
  };

  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        navBar.classList.remove("opacity-0");
        logo.classList.remove("opacity-0");
        setTimeout(() => {
          link1.classList.remove("opacity-0");
        }, 200);
        setTimeout(() => {
          link2.classList.remove("opacity-0");
        }, 500);
        setTimeout(() => {
          button1.classList.remove("opacity-0");
        }, 800);
        setTimeout(() => {
          if (bannerData.show === true) {
            banner.classList.remove("opacity-0");
          }
        }, 1000);
      }
    });
    setTimeout(() => {
      navBar.classList.remove("transition-all");
    }, 2000);
  }, options);

  observer.observe(navBar);

  // button1 scroll to buy section
  button1.addEventListener("click", () => {
    const buySection = document.getElementById("featureList");
    buySection.scrollIntoView({ behavior: "smooth" });
  });
</script>
