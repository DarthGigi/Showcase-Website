<!-- <div class="absolute overflow-hidden h-full w-full"> --><!-- blurred frosted blob 1 purple/blue -->
<div id="blob1" class="blobs absolute overflow-hidden rounded-full saturate-200 transition-all duration-1000 ease-in-out w-[700px] h-[700px] blur-[80px]" style="scale: 1.5; opacity: 0;"></div>
<!-- blurred frosted blob 2 red-->
<div id="blob2" class="blobs absolute overflow-hidden rounded-full saturate-200 transition-all duration-1000 ease-in-out w-[600px] h-[600px] blur-[80px]" style="scale: 1.5; opacity: 0;"></div>
<!-- </div> -->

<script>
  // if div with id hero2scroll is in viewport, add styling to blob1 and blob2
  const hero = document.getElementById("hero");
  const hero2scroll = document.getElementById("hero2scroll");
  const featureList = document.getElementById("featureList");
  const blobBlue = document.getElementById("blob1");
  const blobRed = document.getElementById("blob2");
  const options = {
    root: null,
    rootMargin: "0px",
    threshold: 0.5,
  };

  const observerHero = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        // Blue Blob
        blobBlue.style.transform = "translateY(-50%) translateX(-50%)";
        blobBlue.style.top = "50%";
        blobBlue.style.left = "50%";
        blobBlue.style.backgroundColor = "#4F46E5";

        // Red Blob
        blobRed.style.transform = "translateY(50%) translateX(50%)";
        blobRed.style.bottom = "40%";
        blobRed.style.right = "40%";
        blobRed.style.backgroundColor = "#EF4444";
      }
    });
  }, options);

  const observerHero2scroll = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        observerHero.observe(hero);
        // Blue Blob
        blobBlue.style.transform = "translateY(100%) translateX(0%)";
        blobBlue.style.top = "50%";
        blobBlue.style.left = "50%";
        blobBlue.style.backgroundColor = "#44403c";

        // Red Blob
        blobRed.style.transform = "translateY(110%) translateX(-80%)";
        blobRed.style.bottom = "40%";
        blobRed.style.right = "40%";
        blobRed.style.backgroundColor = "#64748b";
      }
    });
  }, options);

  observerHero2scroll.observe(hero2scroll);

  const observerFeatureList = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        // Blue Blob
        blobBlue.style.transform = "translateY(220%) translateX(-100%)";
        blobBlue.style.top = "50%";
        blobBlue.style.left = "50%";
        blobBlue.style.backgroundColor = "#14532d";

        // Red Blob
        blobRed.style.transform = "translateY(500%) translateX(150%)";
        blobRed.style.bottom = "40%";
        blobRed.style.right = "40%";
        blobRed.style.backgroundColor = "#581c87";
      }
    });
  }, options);

  observerFeatureList.observe(featureList);
</script>
